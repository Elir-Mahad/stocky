{"version":3,"sources":["components/nav parts/active.js","components/nav parts/gainers.js","components/nav parts/losers.js","components/nav.js","components/technews.js","components/cryptonews.js","components/generalnews.js","App.js","serviceWorker.js","index.js"],"names":["Active","state","alldata","loading","fetch","then","response","json","data","setState","this","className","map","datapoint","companyName","symbol","latestPrice","marketCap","week52High","week52Low","React","Component","Gainers","Losers","Genstocks","TechNews","stories","key","title","source","brandName","style","display","imageUrls","src","description","href","url","CryptoNews","GeneralNews","lastUpdated","headline","image","alt","summary","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.aac71d83.chunk.js","sourcesContent":["\n\n\nimport React from \"react\"                     \n\nclass Active extends React.Component {\n\n    constructor() {\n\n        super();\n\n        // this.state = { isToggle: false };\n        \n        // this.handleClick = this.handleClick.bind(this);\n\n        this.state = {\n\n            alldata: null,\n\n            loading: true\n\n        };\n    }\n\n    // handleClick(e) {\n\n    //     this.setState({ isToggle: !this.state.isToggle });\n\n    // }\n\n    componentDidMount() {\n\n        // const sandboxtoken = \"Tsk_85d1baac71014984b7a215ab33bb54c6\"\n\n        const url =\"https://sandbox.iexapis.com/stable/stock/market/list/mostactive?token=Tsk_85d1baac71014984b7a215ab33bb54c6\"\n        \n        // returns list of most active stocks\n\n\n        fetch(url)\n        \n        .then(response => response.json())\n        \n        .then(data => {\n        \n            this.setState({ \n\n                alldata: data, \n\n                loading: false\n\n            });\n\n        });\n\n    }\n    render() {\n\n        if (this.state.loading) return <p>Loading...</p>;\n\n        return (\n\n            <div className =\"bigcontainer\">\n\n                <h1 className =\"heading\"> Most Active </h1>\n\n                {/* <button className=\"choose\" onClick={this.handleClick}>\n                    Most active\n                </button>\n\n                <div\n                    style={{ display: this.state.isToggle ? \"block\" : \"none\" }}\n                    className=\"container\"\n                > */}\n\n                    <section className=\"activebox container\">\n                    \n                        <div className=\"company\">\n\n                                {this.state.alldata.map(datapoint => {\n\n                                return (\n\n                                        <div className=\"companyinfo\">\n\n                                            <h2> {datapoint.companyName}</h2>\n\n                                            <p> Symbol: {datapoint.symbol}</p>\n\n                                            <p> last price: {datapoint.latestPrice}</p>\n\n                                            <p> Market cap:{datapoint.marketCap}</p>\n\n                                            <p> 52 week high: {datapoint.week52High}</p>\n\n                                            <p> 52 week low: {datapoint.week52Low}</p>\n\n                                        </div>\n\n                                );\n                                \n\n                                })}\n\n                        </div>\n\n                    </section>\n\n                {/* </div> */}\n\n            </div>\n\n        );\n    }\n\n}\n\nexport default Active  ","\n\nimport React from \"react\"                     \n\nclass Gainers extends React.Component {\n\n    constructor() {\n\n        super();\n\n        // this.state = { isToggle: false };\n        \n        // this.handleClick = this.handleClick.bind(this);\n\n\n        this.state = {\n\n            alldata: null,\n\n            loading: true\n\n        };\n    }\n\n    // handleClick(e) {\n\n    //     this.setState({ isToggle: !this.state.isToggle });\n\n    // }\n\n\n    componentDidMount() {\n\n        // const sandboxtoken = \"Tsk_85d1baac71014984b7a215ab33bb54c6\"\n\n        const url =\"https://sandbox.iexapis.com/stable/stock/market/list/gainers?token=Tsk_85d1baac71014984b7a215ab33bb54c6\"\n        \n        // returns list of top gainers stocks\n\n\n        fetch(url)\n        \n        .then(response => response.json())\n        \n        .then(data => {\n        \n            this.setState({ \n\n                alldata: data, \n\n                loading: false\n\n            });\n\n        });\n\n    }\n    render() {\n\n        if (this.state.loading) return <p>Loading...</p>;\n\n        return (\n\n                <div className =\"bigcontainer\">\n\n                    <h1 className =\"heading\"> Gainers </h1>\n\n                    {/* <button className=\"choose\" onClick={this.handleClick}>\n                        Winners\n                    </button>\n\n                    <div\n                        style={{ display: this.state.isToggle ? \"block\" : \"none\" }}\n                        className=\"container\"\n                    > */}\n                            <section className=\"gainerbox container\">\n                            \n                                <div className=\"company\">\n\n                                        {this.state.alldata.map(datapoint => {\n\n                                        return (\n\n                                                <div className=\"companyinfo\">\n\n                                                    <h2> {datapoint.companyName}</h2>\n\n                                                    <p> Symbol: {datapoint.symbol}</p>\n\n                                                    <p> last price: {datapoint.latestPrice}</p>\n\n                                                    <p> Market cap:{datapoint.marketCap}</p>\n\n                                                    <p> 52 week high: {datapoint.week52High}</p>\n\n                                                    <p> 52 week low: {datapoint.week52Low}</p>\n\n                                                </div>\n\n                                        );\n                                        \n\n                                        })}\n\n                                </div>\n\n                            </section>\n\n                    {/* </div> */}\n                \n                </div>\n        );\n    }\n\n}\n\nexport default Gainers  ","\n\nimport React from \"react\"                     \n\nclass Losers extends React.Component {\n\n    constructor() {\n\n        super();\n\n        // this.state = { isToggle: false };\n        \n        // this.handleClick = this.handleClick.bind(this);\n\n\n        this.state = {\n\n            alldata: null,\n\n            loading: true\n\n        };\n    }\n\n    // handleClick(e) {\n\n    //     this.setState({ isToggle: !this.state.isToggle });\n\n    // }\n\n\n    componentDidMount() {\n\n        // const sandboxtoken = \"Tsk_85d1baac71014984b7a215ab33bb54c6\"\n\n        const url =\"https://sandbox.iexapis.com/stable/stock/market/list/losers?token=Tsk_85d1baac71014984b7a215ab33bb54c6\"\n        // returns list of bottom loser stocks\n\n\n        fetch(url)\n        \n        .then(response => response.json())\n        \n        .then(data => {\n        \n            this.setState({ \n\n                alldata: data, \n\n                loading: false\n\n            });\n\n        });\n\n    }\n    render() {\n\n        if (this.state.loading) return <p>Loading...</p>;\n\n        return (\n\n                <div className =\"bigcontainer\">\n\n                    {/* <button className=\"choose\" onClick={this.handleClick}>\n                        Losers\n                    </button>\n\n                    <div\n                        style={{ display: this.state.isToggle ? \"block\" : \"none\" }}\n                        className=\"container\"\n                    > */}\n\n                        <h1 className =\"heading\"> Losers </h1>\n                        \n                        <section className=\"loserbox container\">\n\n                        \n                            <div className=\"company\">\n\n                                    {this.state.alldata.map(datapoint => {\n\n                                    return (\n\n                                            <div className=\"companyinfo\">\n\n                                                <h2> {datapoint.companyName}</h2>\n\n                                                <p> Symbol: {datapoint.symbol}</p>\n\n                                                <p> last price: {datapoint.latestPrice}</p>\n\n                                                <p> Market cap:{datapoint.marketCap}</p>\n\n                                                <p> 52 week high: {datapoint.week52High}</p>\n\n                                                <p> 52 week low: {datapoint.week52Low}</p>\n\n                                            </div>\n\n                                    );\n                                    \n\n                                    })}\n\n                            </div>\n\n                        </section>\n\n                    {/* </div> */}\n                \n                </div>\n        );\n    }\n\n}\n\nexport default Losers  ","\n\n\nimport React from \"react\" \n\nimport Active from \"./nav parts/active.js\"\n\nimport Gainers from \"./nav parts/gainers.js\"\n\nimport Losers from \"./nav parts/losers.js\"\n\n// import \"../style.css\"  \n\nfunction Genstocks(){          \n\n    return (            \n\n        <div className=\"threestocks\">\n\n            <div>  <Active /> </div>\n\n            <div>  <Gainers /> </div>\n\n            <div>  <Losers /> </div>\n\n        </div>\n\n\n    )\n\n\n}\n\nexport default Genstocks   ","\nimport React from \"react\"\n\n\nclass TechNews extends React.Component {\n\n    constructor() {\n\n        super();\n\n        // this.state = { isToggle: false };\n        \n        // this.handleClick = this.handleClick.bind(this);\n\n\n        this.state = {\n\n            alldata: null,\n\n            loading: true\n\n        };\n    }\n\n    // handleClick(e) {\n\n    //     this.setState({ isToggle: !this.state.isToggle });\n\n    // }\n\n    componentDidMount() {\n\n            // tech news\n            const url = \"https://sandbox-api.cityfalcon.com/v0.2/stories?offset=0&limit=20&identifier_type=assets&identifierstime_filter=mth1&categories=mp%2Cop&min_cityfalcon_score=50&order_by=popular&languages=en&all_languages=false&access_token=9e522ad481d49a67ba237d3445b5eea849576a83e8ab46f9911f30406c42f810\"\n\n        fetch(url)\n        \n        .then(response => response.json())\n        \n        .then(data => {\n        \n            this.setState({ \n\n                alldata: data, \n\n                loading: false\n\n            });\n\n        });\n\n    }\n    render() {\n\n        if (this.state.loading) return <p>Loading...</p>;\n\n        return (\n\n                <div className=\"newsbigcontainer\">\n\n                    <h1 className=\"heading_news\"> Tech News </h1>\n\n                    {/* <button className=\"choose\" onClick={this.handleClick}>\n                        Tech News\n                    </button>\n\n                    <div\n                        style={{ display: this.state.isToggle ? \"block\" : \"none\" }}\n                        className=\"container\"\n                    > */}\n\n            \n                    <section className=\"technewsbox\">\n\n                            <div className=\"technews\">\n\n                                    <div className=\"techarticle\">\n\n                                        {this.state.alldata.stories.map(datapoint => {\n\n                                            return (\n\n                                                    <div className=\"articleinfo\" key=\"datapoint.title\">\n\n                                                        <h2 className=\"articleheading\"> Headline: {datapoint.title}</h2>\n\n                                                        <p>{datapoint.source.brandName}</p>\n\n                                                        {/* <p>{datapoint.publishTime}</p> */}\n\n                                                        <img \n                                                            style={{display: !datapoint.imageUrls &&  \"none\"}} \n                                                            className=\"image\"  \n                                                            src ={datapoint.imageUrls}\n                                                        />\n\n                                                        <p \n                                                            style={{display: !datapoint.description &&  \"none\"}}\n                                                            className=\"summary\"  \n                                                            src ={datapoint.description}\n                                                        >\n                                                            {datapoint.description}\n                                                        </p>\n                                                        \n                                                        <a href ={datapoint.url}>\n                                                            <p>Read more</p>\n                                                        </a>\n\n                                                    </div>\n\n                                            );\n                                        \n\n                                        })}\n\n                                </div>\n\n                            </div>\n\n                    </section>\n\n            {/* </div> */}\n\n        </div>\n\n\n        );\n    }\n\n}\n\n\nexport default TechNews  ","\n\nimport React from \"react\"\n\n\nclass CryptoNews extends React.Component {\n\n    constructor() {\n\n        super();\n\n        // this.state = { isToggle: false };\n        \n        // this.handleClick = this.handleClick.bind(this);\n\n\n        this.state = {\n\n            alldata: null,\n\n            loading: true\n\n        };\n    }\n\n    // handleClick(e) {\n\n    //     this.setState({ isToggle: !this.state.isToggle });\n\n    // }\n\n    componentDidMount() {\n\n            // cryptocurrency news\n            const url = \" https://sandbox-api.cityfalcon.com/v0.2/stories?offset=0&limit=20&identifier_type=assets&identifierstime_filter=mth1&categories=mp%2Cop&min_cityfalcon_score=50&order_by=popular&languages=en&all_languages=false&access_token=9e522ad481d49a67ba237d3445b5eea849576a83e8ab46f9911f30406c42f810\"\n\n        fetch(url)\n        \n        .then(response => response.json())\n        \n        .then(data => {\n        \n            this.setState({ \n\n                alldata: data, \n\n                loading: false\n\n            });\n\n        });\n\n    }\n    render() {\n\n        if (this.state.loading) return <p>Loading...</p>;\n\n        return (\n\n                <div className=\"newsbigcontainer\">\n\n                    {/* <button className=\"choose\" onClick={this.handleClick}>\n                        Crypto News\n                    </button>\n\n                    <div\n                        style={{ display: this.state.isToggle ? \"block\" : \"none\" }}\n                        className=\"container\"\n                    > */}\n\n                    <h1 className=\"heading_news\"> Crypto News </h1>\n            \n                    <section className=\"technewsbox\">\n\n                            <div className=\"technews\">\n\n                                    <div className=\"techarticle\">\n\n                                        {this.state.alldata.stories.map(datapoint => {\n\n                                            return (\n\n                                                    <div className=\"articleinfo\" key=\"datapoint.title\">\n\n                                                        <h2 className=\"articleheading\"> Headline: {datapoint.title}</h2>\n\n                                                        <p>{datapoint.source.brandName}</p>\n\n                                                        {/* <p>{datapoint.publishTime}</p> */}\n\n                                                        <img \n                                                            style={{display: !datapoint.imageUrls &&  \"none\"}} \n                                                            className=\"image\"  \n                                                            src ={datapoint.imageUrls}\n                                                        />\n\n                                                        <p \n                                                            style={{display: !datapoint.description &&  \"none\"}}\n                                                            className=\"summary\"  \n                                                            src ={datapoint.description}\n                                                        >\n                                                            {datapoint.description}\n                                                        </p>\n                                                        \n                                                        <a href ={datapoint.url}>\n                                                            <p>Read more</p>\n                                                        </a>\n\n                                                    </div>\n\n                                            );\n                                        \n\n                                        })}\n\n                                </div>\n\n                            </div>\n\n                    </section>\n\n            {/* </div> */}\n\n        </div>\n\n\n        );\n    }\n\n}\n\n\nexport default CryptoNews  ","\n\n\n\n\nimport React from \"react\"\n\n\n\nclass GeneralNews extends React.Component {\n\n    constructor() {\n\n        super();\n\n        // this.state = { isToggle: false };\n        \n        // this.handleClick = this.handleClick.bind(this);\n\n\n        this.state = {\n\n            alldata: null,\n\n            loading: true\n\n        };\n    }\n\n    // handleClick(e) {\n\n    //     this.setState({ isToggle: !this.state.isToggle });\n\n    // }\n\n    componentDidMount() {\n\n        // general news -Works\n        const url = \"https://finnhub.io/api/v1/news?category=general&token=bshf1p7rh5r9t1gmt61g\"\n\n            fetch(url)\n        \n        .then(response => response.json())\n        \n        .then(data => {\n        \n            this.setState({ \n\n                alldata: data, \n\n                loading: false\n\n            });\n\n        });\n\n    }\n    render() {\n\n        if (this.state.loading) return <p>Loading...</p>;\n\n        return (\n\n                <div className= \"newsbigcontainer\">\n\n                    {/* <button className=\"choose\" onClick={this.handleClick}>\n                        General news\n                    </button>\n\n                    <div\n                        style={{ display: this.state.isToggle ? \"block\" : \"none\" }}\n                        className=\"container\"\n                    > */}\n\n                    <h1 className =\"heading_news\"> General News </h1>\n            \n                    <section className=\"technewsbox\">\n\n                            <div className=\"technews\">\n\n                                    <div className=\"techarticle\">\n\n                                        {this.state.alldata.map(datapoint => {\n\n                                                    return (\n\n                                                            <div className=\"articleinfo\" key ={datapoint.lastUpdated}>\n\n                                                                <h2 className=\"articleheading\"> Headline: {datapoint.headline}</h2>\n\n                                                                <p>{datapoint.source}</p>\n\n                                                                {/* <p>{datapoint.datetime}</p> */}\n\n                                                                <img \n                                                                    style={{display: !datapoint.image &&  \"none\"}} \n                                                                    className=\"image\"  \n                                                                    src ={datapoint.image}\n                                                                    alt =\"\"\n                                                                />\n\n                                                                <p \n                                                                    style={{display: !datapoint.summary &&  \"none\"}}\n                                                                    className=\"summary\"  \n                                                                    src ={datapoint.summary}\n                                                                >\n                                                                    {datapoint.summary}\n                                                                </p>\n                                                                \n                                                                <a href ={datapoint.url}>\n                                                                    <p>Read more</p>\n                                                                </a>\n\n                                                            </div>\n\n                                                    );\n                                        \n\n                                        })}\n\n                                    </div>\n\n                            </div>\n\n                    </section>\n\n            {/* </div> */}\n\n        </div>\n\n\n        );\n    }\n\n}\n\n\nexport default GeneralNews  ","\nimport React from \"react\"                    //this line imports react, it is necessary because without it jsx won't work \n\n// import \"./App.css\"                         // this imports the style.css file so that all the styles can work, without it the styles won't work\n\nimport Genstocks from \"./components/nav.js\"\n\nimport TechNews from \"./components/technews.js\"\n\nimport CryptoNews from \"./components/cryptonews.js\"\n\nimport GeneralNews from \"./components/generalnews.js\"\n\n\nfunction App(){          \n\n    return (            \n\n        <div className=\"mainbox\">\n            \n            <div className=\"gstocks\"> <Genstocks />  </div> \n\n            <div className=\"techcrypto\">\n\n                <div className=\"gnews\"> <GeneralNews />  </div>\n\n                <div className=\"tnews\"> <TechNews /> </div>\n\n                <div className=\"cnews\"> <CryptoNews /> </div>\n\n            </div>\n\n        </div>\n\n\n    )\n\n\n}\n\nexport default App \n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './App.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}